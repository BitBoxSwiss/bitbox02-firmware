# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
name = "fortanix-sgx-abi"
version = "0.6.1"
authors = ["Fortanix, Inc."]
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = """
An interface for Intel SGX enclaves. This is the interface for the
`x86_64-fortanix-unknown-sgx` target.

This is a small yet functional interface suitable for writing larger enclaves.
In contrast to other enclave interfaces, this interface is primarly designed
for running entire applications in an enclave.

This crate fully describes the type-level interface complete with
documentation. For implementors, this crate contains all the type definitions
and a macro with the function definitions.
"""
homepage = "https://edp.fortanix.com/"
documentation = "https://edp.fortanix.com/docs/api/fortanix_sgx_abi/"
readme = false
keywords = [
    "sgx",
    "enclave",
]
categories = ["os"]
license = "MPL-2.0"
repository = "https://github.com/fortanix/rust-sgx"
resolver = "2"

[package.metadata.docs.rs]
features = ["docs"]

[features]
docs = []
rustc-dep-of-std = ["core"]

[lib]
name = "fortanix_sgx_abi"
path = "src/lib.rs"

[dependencies.core]
version = "1.0.0"
optional = true
package = "rustc-std-workspace-core"
