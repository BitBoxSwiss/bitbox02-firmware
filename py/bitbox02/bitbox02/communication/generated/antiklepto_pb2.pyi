"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2020 Shift Crypto AG

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class AntiKleptoHostNonceCommitment(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMITMENT_FIELD_NUMBER: builtins.int
    commitment: builtins.bytes
    def __init__(
        self,
        *,
        commitment: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["commitment", b"commitment"]) -> None: ...

global___AntiKleptoHostNonceCommitment = AntiKleptoHostNonceCommitment

@typing.final
class AntiKleptoSignerCommitment(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMITMENT_FIELD_NUMBER: builtins.int
    commitment: builtins.bytes
    def __init__(
        self,
        *,
        commitment: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["commitment", b"commitment"]) -> None: ...

global___AntiKleptoSignerCommitment = AntiKleptoSignerCommitment

@typing.final
class AntiKleptoSignatureRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_NONCE_FIELD_NUMBER: builtins.int
    host_nonce: builtins.bytes
    def __init__(
        self,
        *,
        host_nonce: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["host_nonce", b"host_nonce"]) -> None: ...

global___AntiKleptoSignatureRequest = AntiKleptoSignatureRequest
