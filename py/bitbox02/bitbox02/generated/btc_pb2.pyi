# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Optional as typing___Optional,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class BTCCoin(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> BTCCoin: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[BTCCoin]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, BTCCoin]]: ...
    BTC = typing___cast(BTCCoin, 0)
    TBTC = typing___cast(BTCCoin, 1)
    LTC = typing___cast(BTCCoin, 2)
    TLTC = typing___cast(BTCCoin, 3)
BTC = typing___cast(BTCCoin, 0)
TBTC = typing___cast(BTCCoin, 1)
LTC = typing___cast(BTCCoin, 2)
TLTC = typing___cast(BTCCoin, 3)

class BTCScriptType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> BTCScriptType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[BTCScriptType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, BTCScriptType]]: ...
    SCRIPT_UNKNOWN = typing___cast(BTCScriptType, 0)
    SCRIPT_P2PKH = typing___cast(BTCScriptType, 1)
    SCRIPT_P2WPKH_P2SH = typing___cast(BTCScriptType, 2)
    SCRIPT_P2WPKH = typing___cast(BTCScriptType, 3)
SCRIPT_UNKNOWN = typing___cast(BTCScriptType, 0)
SCRIPT_P2PKH = typing___cast(BTCScriptType, 1)
SCRIPT_P2WPKH_P2SH = typing___cast(BTCScriptType, 2)
SCRIPT_P2WPKH = typing___cast(BTCScriptType, 3)

class BTCOutputType(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> BTCOutputType: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[BTCOutputType]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, BTCOutputType]]: ...
    UNKNOWN = typing___cast(BTCOutputType, 0)
    P2PKH = typing___cast(BTCOutputType, 1)
    P2SH = typing___cast(BTCOutputType, 2)
    P2WPKH = typing___cast(BTCOutputType, 3)
    P2WSH = typing___cast(BTCOutputType, 4)
UNKNOWN = typing___cast(BTCOutputType, 0)
P2PKH = typing___cast(BTCOutputType, 1)
P2SH = typing___cast(BTCOutputType, 2)
P2WPKH = typing___cast(BTCOutputType, 3)
P2WSH = typing___cast(BTCOutputType, 4)

class BTCPubRequest(google___protobuf___message___Message):
    class OutputType(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> BTCPubRequest.OutputType: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[BTCPubRequest.OutputType]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, BTCPubRequest.OutputType]]: ...
        TPUB = typing___cast(BTCPubRequest.OutputType, 0)
        XPUB = typing___cast(BTCPubRequest.OutputType, 1)
        YPUB = typing___cast(BTCPubRequest.OutputType, 2)
        ZPUB = typing___cast(BTCPubRequest.OutputType, 3)
        ADDRESS = typing___cast(BTCPubRequest.OutputType, 4)
    TPUB = typing___cast(BTCPubRequest.OutputType, 0)
    XPUB = typing___cast(BTCPubRequest.OutputType, 1)
    YPUB = typing___cast(BTCPubRequest.OutputType, 2)
    ZPUB = typing___cast(BTCPubRequest.OutputType, 3)
    ADDRESS = typing___cast(BTCPubRequest.OutputType, 4)

    keypath = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    script_type = ... # type: BTCScriptType
    coin = ... # type: BTCCoin
    output_type = ... # type: BTCPubRequest.OutputType
    display = ... # type: bool

    def __init__(self,
        *,
        keypath : typing___Optional[typing___Iterable[int]] = None,
        script_type : typing___Optional[BTCScriptType] = None,
        coin : typing___Optional[BTCCoin] = None,
        output_type : typing___Optional[BTCPubRequest.OutputType] = None,
        display : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCPubRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"coin",u"display",u"keypath",u"output_type",u"script_type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"coin",b"coin",u"display",b"display",u"keypath",b"keypath",u"output_type",b"output_type",u"script_type",b"script_type"]) -> None: ...

class BTCSignInitRequest(google___protobuf___message___Message):
    coin = ... # type: BTCCoin
    script_type = ... # type: BTCScriptType
    bip44_account = ... # type: int
    version = ... # type: int
    num_inputs = ... # type: int
    num_outputs = ... # type: int
    locktime = ... # type: int

    def __init__(self,
        *,
        coin : typing___Optional[BTCCoin] = None,
        script_type : typing___Optional[BTCScriptType] = None,
        bip44_account : typing___Optional[int] = None,
        version : typing___Optional[int] = None,
        num_inputs : typing___Optional[int] = None,
        num_outputs : typing___Optional[int] = None,
        locktime : typing___Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignInitRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"bip44_account",u"coin",u"locktime",u"num_inputs",u"num_outputs",u"script_type",u"version"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"bip44_account",b"bip44_account",u"coin",b"coin",u"locktime",b"locktime",u"num_inputs",b"num_inputs",u"num_outputs",b"num_outputs",u"script_type",b"script_type",u"version",b"version"]) -> None: ...

class BTCSignNextResponse(google___protobuf___message___Message):
    class Type(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> BTCSignNextResponse.Type: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[BTCSignNextResponse.Type]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, BTCSignNextResponse.Type]]: ...
        INPUT = typing___cast(BTCSignNextResponse.Type, 0)
        OUTPUT = typing___cast(BTCSignNextResponse.Type, 1)
        DONE = typing___cast(BTCSignNextResponse.Type, 2)
    INPUT = typing___cast(BTCSignNextResponse.Type, 0)
    OUTPUT = typing___cast(BTCSignNextResponse.Type, 1)
    DONE = typing___cast(BTCSignNextResponse.Type, 2)

    type = ... # type: BTCSignNextResponse.Type
    index = ... # type: int
    has_signature = ... # type: bool
    signature = ... # type: bytes

    def __init__(self,
        *,
        type : typing___Optional[BTCSignNextResponse.Type] = None,
        index : typing___Optional[int] = None,
        has_signature : typing___Optional[bool] = None,
        signature : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignNextResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"has_signature",u"index",u"signature",u"type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"has_signature",b"has_signature",u"index",b"index",u"signature",b"signature",u"type",b"type"]) -> None: ...

class BTCSignInputRequest(google___protobuf___message___Message):
    prevOutHash = ... # type: bytes
    prevOutIndex = ... # type: int
    prevOutValue = ... # type: int
    sequence = ... # type: int
    keypath = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]

    def __init__(self,
        *,
        prevOutHash : typing___Optional[bytes] = None,
        prevOutIndex : typing___Optional[int] = None,
        prevOutValue : typing___Optional[int] = None,
        sequence : typing___Optional[int] = None,
        keypath : typing___Optional[typing___Iterable[int]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignInputRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"keypath",u"prevOutHash",u"prevOutIndex",u"prevOutValue",u"sequence"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"keypath",b"keypath",u"prevOutHash",b"prevOutHash",u"prevOutIndex",b"prevOutIndex",u"prevOutValue",b"prevOutValue",u"sequence",b"sequence"]) -> None: ...

class BTCSignOutputRequest(google___protobuf___message___Message):
    ours = ... # type: bool
    type = ... # type: BTCOutputType
    value = ... # type: int
    hash = ... # type: bytes
    keypath = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]

    def __init__(self,
        *,
        ours : typing___Optional[bool] = None,
        type : typing___Optional[BTCOutputType] = None,
        value : typing___Optional[int] = None,
        hash : typing___Optional[bytes] = None,
        keypath : typing___Optional[typing___Iterable[int]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> BTCSignOutputRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"hash",u"keypath",u"ours",u"type",u"value"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"hash",b"hash",u"keypath",b"keypath",u"ours",b"ours",u"type",b"type",u"value",b"value"]) -> None: ...
